services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nestjs-mvp-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nestjs_mvp_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nestjs-mvp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - nestjs-network

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-mvp-app
    ports:
      - "4000:4000"
      - "9229:9229" # Debug port
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/nestjs_mvp_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
    depends_on:
      - postgres
    restart: unless-stopped
    command: pnpm run start:debug
    networks:
      - nestjs-network

  # Prisma Studio
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-mvp-studio
    ports:
      - "5555:5555"
    volumes:
      - ./prisma:/usr/src/app/prisma
      - ./src:/usr/src/app/src
      - ./.env:/usr/src/app/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/nestjs_mvp_db?schema=public
    depends_on:
      - postgres
    restart: unless-stopped
    command: sh -c "npx prisma generate && npx prisma studio --hostname 0.0.0.0 --port 5555"
    networks:
      - nestjs-network

volumes:
  postgres_data:

networks:
  nestjs-network:
    driver: bridge